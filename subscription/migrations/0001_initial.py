# Generated by Django 5.2.7 on 2025-10-23 16:12

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('foodplan_site', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название акции')),
                ('discount_code', models.CharField(max_length=50, unique=True, verbose_name='Код для получения скидки')),
                ('discount_percent', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Размер скидки в процентах')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активна')),
            ],
            options={
                'verbose_name': 'Промо-код',
                'verbose_name_plural': 'Промо-коды',
            },
        ),
        migrations.CreateModel(
            name='PriceRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dish_type', models.CharField(choices=[('breakfast', 'Завтрак'), ('lunch', 'Обед'), ('dinner', 'Ужин'), ('dessert', 'Десерт')], max_length=50, verbose_name='Тип блюда')),
                ('duration', models.PositiveIntegerField(choices=[(1, '1 месяц'), (3, '3 месяца'), (6, '6 месяцев'), (12, '12 месяцев')], default=1, verbose_name='Продолжительность подписки')),
                ('price', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Стоимость за позицию в подписке')),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
                'unique_together': {('dish_type', 'duration')},
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.PositiveIntegerField(choices=[(1, '1 месяц'), (3, '3 месяца'), (6, '6 месяцев'), (12, '12 месяцев')], default=1, verbose_name='Срок подписки (в месяцах)')),
                ('start_date', models.DateField(default=datetime.date.today, verbose_name='Дата начала')),
                ('expiring_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('diet_type', models.CharField(blank=True, choices=[('classic', 'Классическое'), ('low_carb', 'Низкоуглеводное'), ('vegetarian', 'Вегетарианское'), ('keto', 'Кето')], max_length=50, null=True, verbose_name='Тип меню')),
                ('is_breakfast', models.BooleanField(default=False, verbose_name='Завтрак включён')),
                ('is_lunch', models.BooleanField(default=False, verbose_name='Обед включён')),
                ('is_dinner', models.BooleanField(default=False, verbose_name='Ужин включён')),
                ('is_dessert', models.BooleanField(default=False, verbose_name='Десерт включён')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True, verbose_name='Итоговая стоимость подписки')),
                ('excluded_allergens', models.ManyToManyField(blank=True, related_name='subscriptions', to='foodplan_site.allergen', verbose_name='Исключаемые аллергены')),
                ('promotion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriptions', to='subscription.promotion', verbose_name='Использованный промо-код')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Подписка',
                'verbose_name_plural': 'Подписки',
                'indexes': [models.Index(fields=['user', 'expiring_date'], name='subscriptio_user_id_4e728a_idx'), models.Index(fields=['start_date'], name='subscriptio_start_d_914d56_idx')],
            },
        ),
    ]
